name: Remove AWS Access Keys from Code

on:
  push:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'
  pull_request:
    branches:
      - main
      - 'feature/*'
      - 'bugfix/*'

jobs:
  scan-and-remove-keys:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Scan for AWS Access Keys
      - name: Scan for AWS Access Keys
        id: scan
        run: |
          echo "Scanning for AWS keys..."
          
          # Search for AWS Access Keys (the pattern typically starts with 'AKIA')
          # Using grep without -P flag to avoid compatibility issues
          found_keys=$(grep -r -o "AKIA[A-Z0-9]\{16\}" . || echo "No AWS keys found")

          if [[ "$found_keys" == "No AWS keys found" ]]; then
            echo "No AWS keys found."
            echo "found_keys=0" >> $GITHUB_ENV
          else
            echo "AWS keys found: $found_keys"
            echo "$found_keys" > found_keys.txt
            echo "found_keys=1" >> $GITHUB_ENV
          fi

      # Remove AWS Access Keys from code (only if keys are found)
      - name: Remove AWS Access Keys from code
        if: env.found_keys == '1'
        run: |
          echo "Removing AWS keys from the code..."

          # Set user.name and user.email for git commits
          git config --global user.name "paulbren97"
          git config --global user.email "paulbren@amazon.com"
          
          # Regex pattern to find AWS Access Keys in code
          key_pattern='AKIA[A-Z0-9]\{16\}'
          
          # Find and replace keys with a placeholder in all files
          find . -type f -exec sed -i 's/'"$key_pattern"'/REDACTED_ACCESS_KEY/g' {} \;

          # Add the changes to git
          git add .

          # Commit the changes
          git commit -m "Removed AWS access keys"
          
          # Push the changes
          git push https://github-actions:${{ secrets.GITHUB_TOKEN }}@github.com/paulbren97/learn-tf-03.git

